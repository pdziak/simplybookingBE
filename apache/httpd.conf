ServerName localhost

# --- Base includes ---
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule alias_module modules/mod_alias.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule deflate_module modules/mod_deflate.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so

User daemon
Group daemon
ServerTokens Prod
ServerSignature Off
Listen 80

# --- Logging ---
ErrorLog /proc/self/fd/2
LogLevel warn
CustomLog /proc/self/fd/1 combined

# --- MIME & defaults ---
TypesConfig conf/mime.types
DirectoryIndex index.php index.html

# ===================================================================
# VirtualHost: Symfony / API Platform backend (dev + prod)
# ===================================================================
<VirtualHost *:80>
  ServerName simplybooking.webdev
  ServerAlias api.simplybooking.pl

  DocumentRoot "/var/www/html/public"

  <Directory "/var/www/html/public">
    AllowOverride All
    Require all granted
    Options -Indexes +FollowSymLinks
  </Directory>

  # --- Pass Authorization to PHP ---
  SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
  RewriteEngine On
  RewriteCond %{HTTP:Authorization} ^(.*)
  RewriteRule .* - [E=HTTP_AUTHORIZATION:%1]

  # ===================================================================
  # âœ… CORS CONFIGURATION
  # ===================================================================
  # Allowed origins:
  #   - http://simplybooking.webdev:3000
  #   - http://*.simplybooking.webdev:3000
  #   - http/https://*.simplybooking.pl (any port)
  SetEnvIfNoCase Origin "^http://simplybooking\.webdev:3000$"                  ORIGIN_ALLOWED=$0
  SetEnvIfNoCase Origin "^http://([a-z0-9-]+\.)*simplybooking\.webdev:3000$"   ORIGIN_ALLOWED=$0
  SetEnvIfNoCase Origin "^https?://([a-z0-9-]+\.)*simplybooking\.pl(:\d+)?$"   ORIGIN_ALLOWED=$0

  # Detect preflight and headers
  SetEnvIfNoCase Request_Method "OPTIONS" IS_OPTIONS=1
  SetEnvIfNoCase Access-Control-Request-Headers "^(.*)$" REQ_ACRH=$1

  # --- Base CORS headers (for all valid Origins) ---
  Header always set Vary "Origin"
  Header always set Access-Control-Allow-Origin "%{ORIGIN_ALLOWED}e" env=ORIGIN_ALLOWED
  Header always set Access-Control-Allow-Credentials "true" env=ORIGIN_ALLOWED
  Header always set Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" env=ORIGIN_ALLOWED
  Header always set Access-Control-Expose-Headers "Link, Location" env=ORIGIN_ALLOWED

  # --- Preflight-specific headers (OPTIONS) ---
  Header always unset Access-Control-Allow-Headers env=IS_OPTIONS
  Header always set Access-Control-Allow-Headers "%{REQ_ACRH}e" env=IS_OPTIONS
  Header always setifempty Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Origin, Accept" env=IS_OPTIONS
  Header always set Access-Control-Max-Age "86400" env=IS_OPTIONS
  Header always set Content-Length "0" env=IS_OPTIONS
  Header always set Content-Type "text/plain; charset=UTF-8" env=IS_OPTIONS

  # --- Short-circuit OPTIONS ---
  RewriteCond %{ENV:IS_OPTIONS} =1
  RewriteRule ^ - [R=204]

  # ===================================================================
  # PHP-FPM via proxy_fcgi
  # ===================================================================
  ProxyTimeout 60
  ProxyPassMatch "^/(.*\.php(/.*)?)$" "fcgi://apip-php:9000/var/www/html/public/$1"

  # ===================================================================
  # Security
  # ===================================================================
  <LocationMatch "\.(yaml|yml|env|twig|lock|dist|md|git|gitignore|gitattributes)$">
    Require all denied
  </LocationMatch>

  # Static caching
  <LocationMatch "\.(ico|css|js|gif|jpe?g|png|svg|webp|avif|woff2?)$">
    Header set Cache-Control "max-age=3600, public"
  </LocationMatch>

</VirtualHost>